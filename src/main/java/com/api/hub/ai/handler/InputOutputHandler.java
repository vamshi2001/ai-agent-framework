package com.api.hub.ai.handler;

import com.api.hub.ai.handler.impl.EnvironmentState;

/**
 * Interface representing the communication handler between an AI agent and the user
 * in the AI-Agent Framework.
 *
 * <p>This interface defines a contract for handling input and output operations for agents.
 * It is designed to allow agents to send responses to users, receive new inputs, and report
 * success/failure status. It also gives agents access to the current {@link EnvironmentState}
 * to aid in processing tasks in context.</p>
 *
 * <p><b>Usage in Framework:</b></p>
 * <ul>
 *   <li>The {@code Environment} or agent implementation will inject an instance of this interface
 *       into the agent's {@link com.api.hub.ai.pojo.State} object before processing begins.</li>
 *   <li>Agents can use this handler to:</li>
 *   <ul>
 *     <li>Receive user input via {@link #setInput(String)}</li>
 *     <li>Send back output or responses using {@link #setOutPut(String)}</li>
 *     <li>Access the environment state through {@link #setState(EnvironmentState)}</li>
 *     <li>Report task/goal execution result using {@link #status(boolean)}</li>
 *     <li>Query execution status using {@link #isSuccess()}</li>
 *   </ul>
 * </ul>
 *
 * @see com.api.hub.ai.pojo.State
 * @see com.api.hub.ai.handler.impl.EnvironmentState
 * @since 1.0
 */
public interface InputOutputHandler {

    /**
     * Sets the input for the agent to process.
     *
     * @param input A string containing the input message or instruction from the user or environment.
     */
    void setInput(String input);

    /**
     * Sets the output message that the agent wants to communicate back to the user.
     *
     * @param output A string containing the agent's response or message to be sent to the user.
     */
    void setOutPut(String output);

    /**
     * Sets the current environment state which the agent can use during processing.
     *
     * @param state The current {@link EnvironmentState} object.
     */
    void setState(EnvironmentState state);

    /**
     * Retrieves the output message generated by the agent.
     *
     * @return The output string that was set via {@link #setOutPut(String)}.
     */
    String getOut();

    /**
     * Updates the status of the last executed operation by the agent.
     *
     * @param isSuccess {@code true} if the operation succeeded, {@code false} otherwise.
     */
    void status(boolean isSuccess);

    /**
     * Returns the status of the last operation executed by the agent.
     *
     * @return {@code true} if the last action was successful, {@code false} otherwise.
     */
    boolean isSuccess();
}